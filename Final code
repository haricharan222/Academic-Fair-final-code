import tkinter as tk
from tkinter import messagebox
from PIL import Image, ImageTk

# Sample quiz questions
quiz_data = [
    {
        "question": "What is the first SDG goal?",
        "options": ["No Poverty", "Zero Hunger", "Good Health and Well-being", "Quality Education"],
        "answer": "No Poverty"
    },
    {
        "question": "Which SDG goal focuses on climate action?",
        "options": ["Life on Land", "Climate Action", "Affordable and Clean Energy", "Life Below Water"],
        "answer": "Climate Action"
    },
    
    {
        'question': "6 out of 10 people around the world use which technology?",
        'options': ["Smartphone", "Electricity", "Internet", "Television"],
        'correct': "Internet"
    },
    
    {
        'question': "Which SDG focuses on achieving gender equality?",
        'options': ["Poverty", "Education", "Gender Equality", "Health"],
        'correct': "Gender Equality"
    },
    
    {
        'question': "Which SDG focuses on achieving gender equality?",
        'options': ["Gender", "Education", "Equality", "Health"],
        'correct': "Gender"
    },

    
       
]

class SDGQuizGame(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("SDG Goal Quiz Game")
        self.geometry("800x600")


        bg_image = Image.open("C:/Users/har22/.vscode/sdg.png")
        bg_photo = ImageTk.PhotoImage(bg_image.resize((800, 600)))

        self.canvas = tk.Canvas(self, width=800, height=600)
        self.canvas.pack(fill="both", expand=True)
        self.canvas.create_image(0, 0, image=bg_photo, anchor="nw")
        self.bg_photo = bg_photo

        # Initialize quiz variables
        self.current_question = 0
        self.score = 0

        # Display quiz
        self.display_quiz()

    def display_quiz(self):
        question_data = quiz_data[self.current_question]

        # Display question
        self.question_label = tk.Label(self, text=question_data["question"], font=("Arial", 20), bg="#FFFFFF", wraplength=700)
        self.canvas.create_window(400, 100, window=self.question_label)

        # Display options as buttons
        self.option_buttons = []
        for i, option in enumerate(question_data["options"]):
            button = tk.Button(self, text=option, font=("Arial", 16), command=lambda opt=option: self.check_answer(opt))
            self.canvas.create_window(400, 200 + i * 50, window=button)
            self.option_buttons.append(button)

    def check_answer(self, selected_option):
        correct_answer = quiz_data[self.current_question]["answer"]
        if selected_option == correct_answer:
            self.score += 1
            messagebox.showinfo("Correct", "That's correct!")
        else:
            messagebox.showerror("Incorrect", f"Sorry, the correct answer was: {correct_answer}")

        self.current_question += 1
        if self.current_question < len(quiz_data):
            self.clear_screen()
            self.display_quiz()
        else:
            self.show_final_score()

    def clear_screen(self):
        self.canvas.delete("all")
        self.canvas.create_image(0, 0, image=self.bg_photo, anchor="nw")

    def show_final_score(self):
        self.clear_screen()
        score_text = f"Your final score is: {self.score} / {len(quiz_data)}"
        self.score_label = tk.Label(self, text=score_text, font=("Arial", 24), bg="#FFFFFF")
        self.canvas.create_window(400, 300, window=self.score_label)
        restart_button = tk.Button(self, text="Play Again", font=("Arial", 16), command=self.restart_game)
        self.canvas.create_window(400, 400, window=restart_button)

    def restart_game(self):
        self.current_question = 0
        self.score = 0
        self.clear_screen()
        self.display_quiz()

if __name__ == "__main__":
    game = SDGQuizGame()
    game.mainloop()
