import tkinter as tk
from tkinter import messagebox
from PIL import Image, ImageTk

quiz_data = [
    {
        "question": "What is the first SDG goal?",
        "options": ["No Poverty", "Zero Hunger", "Good Health and Well-being", "Quality Education"],
        "answer": "No Poverty"
    },
    {
        "question": "Which SDG goal focuses on climate action?",
        "options": ["Life on Land", "Climate Action", "Affordable and Clean Energy", "Life Below Water"],
        "answer": "Climate Action"
    },
    {'question': "By which year do we need to eradicate extreme poverty?",
        'options': ["2025", "2030", "2040", "2050"],
        'answer': "2030"},
    {'question': "Before which crisis projections showed 200 m children would be out of school?",
        'options': ["Ebola", "Coronavirus", "Financial Crisis", "Climate Change"],
        'answer': "Coronavirus"},
    {'question': "6 out of 10 people around the world use which technology?",
        'options': ["Smartphone", "Electricity", "Internet", "Television"],
        'answer': "Internet"},
    {'question': "Which SDG focuses on achieving gender equality?",
        'options': ["Poverty", "Education", "Gender Equality", "Health"],
        'answer': "Gender Equality"},
    {'question': "Which SDG is dedicated to clean water and sanitation?",
        'options': ["Poverty", "Water", "Gender Equality", "Justice"],
        'answer': "Water"},
    {'question': "Which SDG aims to ensure access to affordable and clean energy?",
        'options': ["Mobile", "Education", "Energy", "Laptop"],
        'answer': "Energy"},
    {'question': "Which SDG promotes decent work and economic growth?",
        'options': ["Poverty", "Education", "Gender Equality", "Work"],
        'answer': "Work"},
    {'question': "Which SDG focuses on industry, innovation, and infrastructure?",
        'options': ["Industry", "Education", "Gender Equality", "Health"],
        'answer': "Industry"},
    {'question': "Which SDG aims to reduce inequality within and among countries?",
         'options': ["Poverty", "Education", "Inequality", "Health"],
         'answer': "Inequality"},
    {'question': "Which SDG is about making cities and human settlements inclusive, safe, resilient, and sustainable?",
         'options': ["Cities", "Education", "Gender Equality", "Discrimination"],
         'answer': "Cities"},
    {'question': "Which SDG focuses on responsible consumption and production?",
         'options': ["Consumption", "Education", "Gender Equality", "Health"],
         'answer': "Consumption"},
    {'question': "Which SDG focuses on climate action?",
         'options': ["Poverty", "Education", "Climate", "Health"],
         'answer': "Climate"},
    {'question': "Which SDG goal is dedicated to life below water?",
         'options': ["Poverty", "Education", "Oceans", "Health"],
         'answer': "Oceans"},
    {'question': "Which SDG focuses on life on land?",
         'options': ["Poverty", "Education", "Oceans", "Forests"],
         'answer': "Forests"},
    {'question': "Which SDG promotes peace, justice, and strong institutions?",
         'options': ["Peace", "Education", "Oceans", "Health"],
         'answer': "Peace"},
    {'question': "Which SDG focuses on partnerships for the goals?",
         'options': ["Poverty", "Partnerships", "Oceans", "Health"],
         'answer': "Partnerships"},
]

class SDGQuizGame(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("SDG Goal Quiz Game")
        self.geometry("800x600")

        bg_image = Image.open("C:/Users/info/.vscode/images.png")
        bg_photo = ImageTk.PhotoImage(bg_image.resize((800, 600)))

        self.canvas = tk.Canvas(self, width=800, height=600)
        self.canvas.pack(fill="both", expand=True)
        self.canvas.create_image(0, 0, image=bg_photo, anchor="nw")
        self.bg_photo = bg_photo

        self.current_question = 0
        self.score = 0

        self.display_quiz()
        self.add_exit_button()
        self.show_start_screen()

    def show_start_screen(self):
        self.canvas.delete("all")
        self.canvas.create_image(0, 0, image=self.bg_photo, anchor="nw")
        title_label = tk.Label(self, text="Welcome to the SDG Goal Quiz Game", font=("Segoe UI Variable Display", 30, "bold"), bg="#FFFFFF")
        self.canvas.create_window(400, 150, window=title_label)
        start_button = tk.Button(self, text="Start Quiz", font=("Arial", 16), command=self.start_quiz)
        self.canvas.create_window(400, 300, window=start_button)

    def start_quiz(self):
        self.current_question = 0
        self.score = 0
        self.clear_screen()
        self.display_quiz()
        self.add_exit_button()

    def display_quiz(self):
        question_data = quiz_data[self.current_question]
        self.question_label = tk.Label(self, text=question_data["question"], font=("Comic Sans MS", 20), bg="#FFFFFF", wraplength=700)
        self.canvas.create_window(400, 100, window=self.question_label)

        self.option_buttons = []
        for i, option in enumerate(question_data["options"]):
            button = tk.Button(self, text=option, font=("Segoe UI", 16), command=lambda opt=option: self.check_answer(opt))
            self.canvas.create_window(400, 200 + i * 50, window=button)
            self.option_buttons.append(button)

    def check_answer(self, selected_option):
        correct_answer = quiz_data[self.current_question]["answer"]
        if selected_option == correct_answer:
            self.score += 1
            messagebox.showinfo("Correct", "That's correct!")
        else:
            messagebox.showerror("Incorrect", f"Sorry, the correct answer was: {correct_answer}")

        self.current_question += 1
        if self.current_question < len(quiz_data):
            self.clear_screen()
            self.display_quiz()
        else:
            self.show_final_score()

    def clear_screen(self):
        self.canvas.delete("all")
        self.canvas.create_image(0, 0, image=self.bg_photo, anchor="nw")

    def show_final_score(self):
        self.clear_screen()
        score_text = f"Your final score is: {self.score} / {len(quiz_data)}"
        self.score_label = tk.Label(self, text=score_text, font=("Arial", 24), bg="#FFFFFF")
        self.canvas.create_window(400, 300, window=self.score_label)

        restart_button = tk.Button(self, text="Play Again", font=("Arial", 16), command=self.restart_game)
        self.canvas.create_window(400, 400, window=restart_button)

        exit_button = tk.Button(self, text="Exit", font=("Arial", 16), command=self.quit)
        self.canvas.create_window(400, 450, window=exit_button)

    def restart_game(self):
        self.current_question = 0
        self.score = 0
        self.clear_screen()
        self.display_quiz()

    def add_exit_button(self):
        exit_button = tk.Button(self, text="Exit", font=("Arial", 16), command=self.quit)
        self.canvas.create_window(700, 550, window=exit_button)

if __name__ == "__main__":
    game = SDGQuizGame()
    game.mainloop()
